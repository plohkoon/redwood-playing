
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log  main;

  sendfile        on;
  #tcp_nopush     on;

  keepalive_timeout  65;
  resolver_timeout   1s;

  gzip  on;

  include /etc/nginx/conf.d/*.conf;

  server {
    listen          3000;
    root            /www/;

    location /graphql/ {
      proxy_pass http://api:8911/graphql;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location @prerender {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      resolver DNS-IP;

      set $bot 0;
      if ($http_user_agent ~* "googlebot|bingbot|yandex|baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest\/0\.|pinterestbot|slackbot|vkShare|W3C_Validator|whatsapp") {
        set $bot 1;
      }
      if ($args ~ "_escaped_fragment_") {
        set $bot 1;
      }
      if ($http_user_agent ~ "Prerender") {
        set $bot 0;
      }
      if ($uri ~* "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|svg|eot)") {
        set $bot 0;
      }

      if ($bot = 1) {
        # return 200 http://prerender:3000/render?url=http://web:3000$uri;
        # proxy_pass http://prerender:3000/render?url=$request;
        # rewrite .* /$scheme://$host$request_uri?;
        proxy_pass http://prerender:3000/render?url=http://web:3000$uri;
        break;
      }
      if ($bot = 0) {
        rewrite    .* /index.html break;
      }
    }

    location / {
      try_files     $uri @prerender;
    }
  }
}
